<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[How to use mockjs to create data in pro!]]></title>
      <url>https://sefon-fe.github.io/2017/02/07/use-mockjs-create-data/</url>
      <content type="html"><![CDATA[<p>由于多种原因，在联调的时候会缺少相应的数据，所以我们需要自己构建假的数据测试相关的业务场景，这里简单介绍下 <code>mockjs</code> 在 XXX 项目中的简单引用。本教程只是一个入门参考，需要更健壮的数据请自己在补充。</p>
<a id="more"></a>
<h2 id="Mock-下载"><a href="#Mock-下载" class="headerlink" title="Mock 下载"></a>Mock 下载</h2><ul>
<li>官网地址： <a href="http://mockjs.com/" title="http://mockjs.com/" target="_blank" rel="external">http://mockjs.com/</a></li>
<li>github地址：<a href="https://github.com/nuysoft/Mock" target="_blank" rel="external">https://github.com/nuysoft/Mock</a></li>
<li>下载地址：<a href="http://mockjs.com/0.1/" target="_blank" rel="external">http://mockjs.com/0.1/</a> 【<strong>见后面</strong>】</li>
</ul>
<p>下载不多说，后面详细说一下在我们XXX项目中的使用方法</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ul>
<li>将压缩包放入 <code>runtime</code> -&gt; <code>scripts</code> -&gt; <code>app</code> 下面，如图，解压 【或者你自己随便放】</li>
</ul>
<p><img src="/uploads/use-mock/2.png" alt=""></p>
<blockquote>
<p>PS：其他文件是<code>eCharts</code>需要用的，可忽略, <code>ui-mock.js</code>是定义的数据拦截模块，核心模块。</p>
</blockquote>
<ul>
<li>在 <code>runtime</code> 运行器中 <code>tiny-all.js</code> 引入 mock插件</li>
</ul>
<p><img src="/uploads/use-mock/1.png" alt=""></p>
<ul>
<li>改变 url 后面菜蔬使用</li>
</ul>
<p><img src="/uploads/use-mock/3.png" alt=""></p>
<blockquote>
<p>PS： 默认是不使用，<code>false</code>不使用，<code>true</code>使用</p>
</blockquote>
<ul>
<li>核心代码讲解</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">define([<span class="string">'app/mock-test/mockjs/dist/mock'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">Mock</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> mock = <span class="built_in">window</span>.tinyWidget.util.queryString(<span class="string">'mock'</span>);</div><div class="line">    <span class="keyword">if</span> (!mock || mock == <span class="literal">false</span> || mock == <span class="string">'false'</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//静态预览</span></div><div class="line">    <span class="comment">// false &amp;&amp; Mock.mock(/^((?!mock-test).)+\/fixture\/[\s\S]*/, function(options) &#123;</span></div><div class="line">    <span class="comment">//     var url = options.url;</span></div><div class="line">    <span class="comment">//     var path = url.match(/fixture\/[\s\S]*/)[0];</span></div><div class="line">    <span class="comment">//     var res;</span></div><div class="line">    <span class="comment">//     $.ajax(&#123;</span></div><div class="line">    <span class="comment">//         url: '/analystrunner/scripts/app/mock-test/' + path,</span></div><div class="line">    <span class="comment">//         type: 'get',</span></div><div class="line">    <span class="comment">//         async: false</span></div><div class="line">    <span class="comment">//     &#125;).then(function(data) &#123;</span></div><div class="line">    <span class="comment">//         res = data;</span></div><div class="line">    <span class="comment">//     &#125;)</span></div><div class="line">    <span class="comment">//     return JSON.parse(res);</span></div><div class="line">    <span class="comment">// &#125;);</span></div><div class="line"></div><div class="line">    <span class="comment">//动态预览</span></div><div class="line">    <span class="comment">// 拦截 请求地址 query</span></div><div class="line">    <span class="literal">true</span> &amp;&amp; Mock.mock(<span class="regexp">/service\/dataquery\/query/</span>, <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> data;</div><div class="line"></div><div class="line">        <span class="comment">// 这里是为了获得 data 的值，options.body 中是字符串转码，所以需要解码，并且 执行得到 data的复写</span></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="built_in">eval</span>(<span class="built_in">decodeURIComponent</span>(<span class="built_in">decodeURIComponent</span>(options.body)));</div><div class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</div><div class="line">            <span class="built_in">eval</span>(<span class="built_in">decodeURIComponent</span>(options.body));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> dataTpl = &#123;&#125;;</div><div class="line"></div><div class="line">        data.columns.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (<span class="regexp">/model|MODEL|counter|COUNTER/i</span>.test(item.type)) &#123;</div><div class="line">                dataTpl[item.id + <span class="string">'|1'</span>] = [<span class="number">10000</span> * <span class="built_in">Math</span>.random(), <span class="number">1000</span> * <span class="built_in">Math</span>.random(), <span class="number">10000</span> * <span class="built_in">Math</span>.random(), <span class="number">0</span>, <span class="number">0</span>, <span class="comment">/* undefined, '-'*/</span> ];</div><div class="line">                <span class="keyword">if</span> (<span class="built_in">window</span>.testUnit) &#123;</div><div class="line">                    item.unit = &#123;</div><div class="line">                        <span class="attr">name</span>: <span class="built_in">window</span>.testUnit</div><div class="line">                    &#125;;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="regexp">/TIME|time/</span>.test(item.type)) &#123;</div><div class="line">                dataTpl[item.id + <span class="string">'|1'</span>] = [<span class="string">'@date("yyyy-MM-dd")'</span>];</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                dataTpl[item.id + <span class="string">'|1'</span>] = [<span class="string">'@word'</span>, <span class="string">'@word'</span>, <span class="string">'@word'</span>, <span class="string">'@word'</span>, <span class="string">'@word'</span>, <span class="string">'@word'</span>, <span class="string">'Unknown'</span> <span class="comment">/*, '', undefined, '-'*/</span> ];</div><div class="line">                <span class="comment">// dataTpl[item.id + '|1'] = ['@datetime("T")'];/*时间戳*/</span></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        <span class="keyword">var</span> res = Mock.mock(&#123;</div><div class="line">            <span class="string">'returnCode|1'</span>: [<span class="string">'20000'</span>],</div><div class="line">            <span class="string">'columns'</span>: data.columns,</div><div class="line">            <span class="string">'data|200'</span>: [</div><div class="line">                dataTpl</div><div class="line">            ],</div><div class="line">            <span class="string">'returnMessage|1'</span>: [<span class="string">"请求成功"</span>],</div><div class="line">            <span class="string">'total|1'</span>: [<span class="number">1</span>]</div><div class="line">        &#125;);</div><div class="line">        res.total = res.data.length;</div><div class="line">        <span class="built_in">console</span>.log(res);</div><div class="line">        <span class="keyword">return</span> res;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>PS:这里只模拟了 表格的数据，如果其他组件不支持，请自行修改或者需求帮助</p>
</blockquote>
<h2 id="参考-API"><a href="#参考-API" class="headerlink" title="参考 API"></a>参考 API</h2><ul>
<li>API地址：<a href="http://mockjs.com/0.1/" target="_blank" rel="external">http://mockjs.com/0.1/</a></li>
<li>代码提供者：飞哥，感谢！</li>
<li>XXX项目，配合源码下载 <a href="/uploads/use-mock/mock-test.rar">/uploads/use-mock/mock-test.rar</a></li>
</ul>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Web前端开发基础规范参考]]></title>
      <url>https://sefon-fe.github.io/2017/01/17/api-guide/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Author：WJX</p>
</blockquote>
<h2 id="项目及文件命名规则"><a href="#项目及文件命名规则" class="headerlink" title="项目及文件命名规则"></a>项目及文件命名规则</h2><h3 id="项目命名"><a href="#项目命名" class="headerlink" title="项目命名"></a>项目命名</h3><p>全部采用小写方式， 以下划线分隔。<br>例：<code>my_project_name</code></p>
<h3 id="目录命名"><a href="#目录命名" class="headerlink" title="目录命名"></a>目录命名</h3><p>参照项目命名规则；<br>有复数结构时，要采用复数命名法。<br>例：<code>scripts</code>, <code>styles</code>, <code>images</code>, <code>data_models</code></p>
<a id="more"></a>
<h3 id="JS文件命名"><a href="#JS文件命名" class="headerlink" title="JS文件命名"></a>JS文件命名</h3><p>参照项目命名规则。<br>例：<code>account_model.js</code></p>
<h3 id="CSS，SCSS文件命名"><a href="#CSS，SCSS文件命名" class="headerlink" title="CSS，SCSS文件命名"></a>CSS，SCSS文件命名</h3><p>参照项目命名规则。<br>例：<code>retina_sprites.scss</code></p>
<h3 id="HTML文件命名"><a href="#HTML文件命名" class="headerlink" title="HTML文件命名"></a>HTML文件命名</h3><p>参照项目命名规则。<br>例：<code>error_report.html</code></p>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>缩进使用<code>soft tab</code>（4个空格）；<br>嵌套的节点应该缩进；<br>在属性上，使用双引号，不要使用单引号；<br>属性名全小写，用中划线做分隔符；<br>不要在自动闭合标签结尾处使用斜线（HTML5 规范 指出他们是可选的）；<br>不要忽略可选的关闭标签，例：<br> 和<code>&lt;/body&gt;</code>。<br>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Page title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/company_logo.png"</span> <span class="attr">alt</span>=<span class="string">"Company"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"hello-world"</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML5-doctype"><a href="#HTML5-doctype" class="headerlink" title="HTML5 doctype"></a>HTML5 doctype</h3><p>在页面开头使用这个简单地<code>doctype</code>来启用标准模式，使其在每个浏览器中尽可能一致的展现；<br>虽然<code>doctype</code>不区分大小写，但是按照惯例，<code>doctype</code>大写。<br>不同<code>doctype</code>在不同浏览器下会触发不同的渲染模式，访问下面链接了解更多<br><a href="https://hsivonen.fi/doctype/" target="_blank" rel="external">https://hsivonen.fi/doctype/</a><br><a href="http://www.w3school.com.cn/tags/tag_doctype.asp" target="_blank" rel="external">http://www.w3school.com.cn/tags/tag_doctype.asp</a></p>
<p>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">	...</div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="lang属性"><a href="#lang属性" class="headerlink" title="lang属性"></a>lang属性</h3><p>根据HTML5规范：<br>应在html标签上加上<code>lang</code>属性。这会给语音工具和翻译工具帮助，告诉它们应当怎么去发音和翻译。<br>更多关于 <code>lang</code> 属性的说明在这里<a href="[http://w3c.github.io/html/semantics.html#the-html-element]">http://w3c.github.io/html/semantics.html#the-html-element</a><br>具体的语言列表请查看这里<a href="[https://msdn.microsoft.com/en-us/library/ms533052(v=vs.85).aspx]">https://msdn.microsoft.com/en-us/library/ms533052(v=vs.85).aspx</a></p>
<p>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en-us"</span>&gt;</span></div><div class="line">    ...</div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><p>通过声明一个明确的字符编码，让浏览器轻松、快速的确定适合网页内容的渲染方式，通常指定为<code>&#39;UTF-8&#39;</code>。<br>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    ...</div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="IE兼容模式"><a href="#IE兼容模式" class="headerlink" title="IE兼容模式"></a>IE兼容模式</h3><p>用 <code>&lt;meta&gt;</code>标签可以指定页面应该用什么版本的IE来渲染；<br>如果你想要了解更多，请点击这里<a href="http://www.tuicool.com/articles/ra6Fjuj]" target="_blank" rel="external">http://www.tuicool.com/articles/ra6Fjuj</a></p>
<p>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">metahttp-equiv="X-UA-Compatible"content="IE=Edge"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    ...</div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="引入CSS-JS"><a href="#引入CSS-JS" class="headerlink" title="引入CSS, JS"></a>引入CSS, JS</h3><p>根据HTML5规范, 通常在引入<code>CSS</code>和<code>JS</code>时不需要指明 <code>type</code>，因为 <code>text/css</code>和 <code>text/javascript</code> 分别是他们的默认值。<br>HTML5 规范链接<br>使用link： <a href="[http://www.w3school.com.cn/tags/tag_link.asp]">http://www.w3school.com.cn/tags/tag_link.asp</a><br>使用style：<a href="[http://www.w3school.com.cn/tags/tag_style.asp]">http://www.w3school.com.cn/tags/tag_style.asp</a><br>使用script：<a href="[http://www.w3school.com.cn/tags/tag_script.asp]">http://www.w3school.com.cn/tags/tag_script.asp</a></p>
<p>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">&lt;!-- External CSS --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"code_guide.css"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- In-document CSS --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- External JS --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"code_guide.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">shux</div><div class="line"><span class="comment">&lt;!-- In-document JS --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="属性顺序"><a href="#属性顺序" class="headerlink" title="属性顺序"></a>属性顺序</h3><p>属性应该按照特定的顺序出现以保证易读性；</p>
<pre><code>class
id
name
data-*
src, for, type, href, value , max-length, max, min, pattern
placeholder, title, alt
aria-*, role
required, readonly, disabled
</code></pre><p><code>class</code>是为高可复用组件设计的，所以应处在第一位；<br><code>id</code>更加具体且应该尽量少使用，所以将它放在第二位。<br>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"..."</span> <span class="attr">id</span>=<span class="string">"..."</span> <span class="attr">data-modal</span>=<span class="string">"toggle"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Example link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span><span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="boolean属性"><a href="#boolean属性" class="headerlink" title="boolean属性"></a>boolean属性</h3><p><code>boolean</code>属性指不需要声明取值的属性，XHTML需要每个属性声明取值，但是HTML5并不需要；<br>更多内容可以参考 <a href="[http://www.zhangxinxu.com/wordpress/2010/09/%E7%B2%BE%E7%AE%80%E9%AB%98%E6%95%88%E7%9A%84css%E5%91%BD%E5%90%8D%E5%87%86%E5%88%99%E6%96%B9%E6%B3%95/]">https://whatwg-cn.github.io/html/#</a><br><code>boolean-attributes：boolean</code>属性的存在表示取值为<code>true</code>，不存在则表示取值为<code>false</code>。</p>
<p>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">disabled</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">selected</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="JS生成标签"><a href="#JS生成标签" class="headerlink" title="JS生成标签"></a>JS生成标签</h3><p>在JS文件中生成标签让内容变得更难查找，更难编辑，性能更差。应该尽量避免这种情况的出现。</p>
<h3 id="减少标签数量"><a href="#减少标签数量" class="headerlink" title="减少标签数量"></a>减少标签数量</h3><p>在编写HTML代码时，需要尽量避免多余的父节点；<br>很多时候，需要通过迭代和重构来使HTML变得更少。<br>代码示例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">&lt;!-- Not well --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- Better --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"avatar"</span> <span class="attr">src</span>=<span class="string">"..."</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="实用高于完美"><a href="#实用高于完美" class="headerlink" title="实用高于完美"></a>实用高于完美</h3><p>尽量遵循HTML标准和语义，但是不应该以浪费实用性作为代价；<br>任何时候都要用尽量小的复杂度和尽量少的标签来解决问题。</p>
<h2 id="CSS-SCSS"><a href="#CSS-SCSS" class="headerlink" title="CSS,SCSS"></a>CSS,SCSS</h2><h3 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h3><p>使用soft tab（4个空格）。<br>代码示例：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="selector-class">.element</span>&#123;</div><div class="line">	<span class="attribute">position</span>:absolute;</div><div class="line">	<span class="attribute">top</span>:<span class="number">10px</span>;</div><div class="line">	<span class="attribute">left</span>:<span class="number">10px</span>;</div><div class="line">	<span class="attribute">border-radius</span>:<span class="number">10px</span>;</div><div class="line">	<span class="attribute">width</span>:<span class="number">50px</span>;</div><div class="line">	<span class="attribute">height</span>:<span class="number">50px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><p>每个属性声明末尾都要加分号。<br>代码示例：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="selector-class">.element</span>&#123;</div><div class="line">	<span class="attribute">width</span>:<span class="number">20px</span>;</div><div class="line">	<span class="attribute">height</span>:<span class="number">20px</span>;</div><div class="line">	<span class="attribute">background-color</span>:red;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><p>以下几种情况不需要空格：</p>
<ul>
<li>属性名后</li>
<li>多个规则的分隔符’,’前</li>
<li>!important ‘!’后</li>
<li>行末不要有多余的空格</li>
</ul>
<p>以下几种情况需要空格：</p>
<ul>
<li>属性值前</li>
<li>选择器’&gt;’, ‘+’, ‘~’前后</li>
<li>‘{‘前</li>
<li>!important ‘!’前</li>
<li>@else 前后</li>
<li>属性值中的’,’后</li>
<li>注释’/<em>‘后和’</em>/‘前</li>
</ul>
<p>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">	Color :red! important;</div><div class="line">	background-color: rgba(0,0,0,.5);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	color: red !important;</div><div class="line">	background-color: rgba(0, 0, 0, .5);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element ,</div><div class="line">.dialog&#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element,</div><div class="line">.dialog &#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element&gt;.dialog&#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &gt; .dialog&#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element&#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">@if&#123;</div><div class="line">...</div><div class="line">&#125;@else&#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">@if &#123;</div><div class="line">...</div><div class="line">&#125; @else &#123;</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h3><p>以下几种情况需要空行：</p>
<ul>
<li>文件最后保留一个空行</li>
<li>‘}’后最好跟一个空行，包括<code>scss</code>中嵌套的规则</li>
<li>属性之间需要适当的空行，具体见属性声明顺序</li>
</ul>
<p>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">	...</div><div class="line">&#125;</div><div class="line">.dialog &#123;</div><div class="line">	color:red;</div><div class="line">&amp;:after&#123;</div><div class="line">...</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	...</div><div class="line">&#125;</div><div class="line"></div><div class="line">.dialog &#123;</div><div class="line">	color:red;</div><div class="line"></div><div class="line">&amp;:after&#123;</div><div class="line">...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>以下几种情况不需要换行：</p>
<ul>
<li>‘{‘前</li>
</ul>
<p>以下几种情况需要换行：</p>
<ul>
<li>‘{‘后和’}’前</li>
<li>每个属性独占一行</li>
<li>多个规则的分隔符’,’后</li>
</ul>
<p>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/* not good */</div><div class="line">.element</div><div class="line">&#123;</div><div class="line">	color:red; </div><div class="line">	background-color:black;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	color:red;</div><div class="line">	background-color:black;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element,.dialog &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element,</div><div class="line">.dialog &#123;</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul>
<li>注释统一用’/<em> </em>/‘（<code>scss</code>中也不要用’//‘），具体参照示例中的写法；</li>
<li>缩进与下一行代码保持一致；</li>
<li>可位于一个代码行的末尾，与代码间隔一个空格。<br>代码示例：</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/* Modal header */</div><div class="line">.modal-header &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*</div><div class="line"> * Modal header</div><div class="line"> */</div><div class="line">.modal-header &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">.modal-header &#123;</div><div class="line">	/* 50px */</div><div class="line">	width:50px;</div><div class="line">	</div><div class="line">	color:red; /* color red */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h3><ul>
<li>最外层统一使用双引号；</li>
<li>url的内容要用引号；</li>
<li>属性选择器中的属性值需要引号。<br>代码示例：</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">element:after &#123;</div><div class="line">	content:"";</div><div class="line">	background-image:url("logo.png");</div><div class="line">&#125;</div><div class="line"></div><div class="line">li[data-type="single"] &#123;</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h3><ul>
<li>类名使用小写字母，以中划线分隔</li>
<li><code>id</code>采用驼峰式命名</li>
<li><code>scss</code>中的变量、函数、混合、<code>placeholder</code>采用驼峰式命名</li>
</ul>
<p>更多关于<code>css</code>命名的技巧，请访问<br><a href="[http://www.zhangxinxu.com/wordpress/2010/09/%E7%B2%BE%E7%AE%80%E9%AB%98%E6%95%88%E7%9A%84css%E5%91%BD%E5%90%8D%E5%87%86%E5%88%99%E6%96%B9%E6%B3%95/]">http://www.zhangxinxu.com/wordpress/2010/09/%E7%B2%BE%E7%AE%80%E9%AB%98%E6%95%88%E7%9A%84css%E5%91%BD%E5%90%8D%E5%87%86%E5%88%99%E6%96%B9%E6%B3%95/</a></p>
<p>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/* class */</div><div class="line">.element-content &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* id */</div><div class="line">#myDialog &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* 变量 */</div><div class="line">$colorBlack:#000;</div><div class="line"></div><div class="line">/* 函数 */</div><div class="line">@functionpxToRem($px) &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* 混合 */</div><div class="line">@mixincenterBlock &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* placeholder */</div><div class="line">%myDialog &#123;</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="属性声明顺序"><a href="#属性声明顺序" class="headerlink" title="属性声明顺序"></a>属性声明顺序</h3><p>相关的属性声明按右边的顺序做分组处理，组之间需要有一个空行。<br>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">.declaration-order &#123;</div><div class="line">	display:block;</div><div class="line">	float:right;</div><div class="line">	position:absolute;</div><div class="line">	top:0;</div><div class="line">	right:0;</div><div class="line">	bottom:0;</div><div class="line">	left:0;</div><div class="line">	z-index:100;</div><div class="line">	</div><div class="line">	border:1pxsolid#e5e5e5;</div><div class="line">	border-radius:3px;</div><div class="line">	width:100px;</div><div class="line">	height:100px;</div><div class="line">	</div><div class="line">	font:normal13px"Helvetica Neue",sans-serif;</div><div class="line">	line-height:1.5;</div><div class="line">	text-align:center;</div><div class="line">	</div><div class="line">	color:#333;</div><div class="line">	background-color:#f5f5f5;</div><div class="line">	</div><div class="line">	opacity:1;</div><div class="line">&#125;</div><div class="line">// 下面是推荐的属性的顺序</div><div class="line">[</div><div class="line">    [</div><div class="line">		"display",</div><div class="line">		"visibility",</div><div class="line">		"float",</div><div class="line">		"clear",</div><div class="line">		"overflow",</div><div class="line">		"overflow-x",</div><div class="line">		"overflow-y",</div><div class="line">		"clip",</div><div class="line">		"zoom"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"table-layout",</div><div class="line">		"empty-cells",</div><div class="line">		"caption-side",</div><div class="line">		"border-spacing",</div><div class="line">		"border-collapse",</div><div class="line">		"list-style",</div><div class="line">		"list-style-position",</div><div class="line">		"list-style-type",</div><div class="line">		"list-style-image"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"-webkit-box-orient",</div><div class="line">		"-webkit-box-direction",</div><div class="line">		"-webkit-box-decoration-break",</div><div class="line">		"-webkit-box-pack",</div><div class="line">		"-webkit-box-align",</div><div class="line">		"-webkit-box-flex"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"position",</div><div class="line">		"top",</div><div class="line">		"right",</div><div class="line">		"bottom",</div><div class="line">		"left",</div><div class="line">		"z-index"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"margin",</div><div class="line">		"margin-top",</div><div class="line">		"margin-right",</div><div class="line">		"margin-bottom",</div><div class="line">		"margin-left",</div><div class="line">		"-webkit-box-sizing",</div><div class="line">		"-moz-box-sizing",</div><div class="line">		"box-sizing",</div><div class="line">		"border",</div><div class="line">		"border-width",</div><div class="line">		"border-style",</div><div class="line">		"border-color",</div><div class="line">		"border-top",</div><div class="line">		"border-top-width",</div><div class="line">		"border-top-style",</div><div class="line">		"border-top-color",</div><div class="line">		"border-right",</div><div class="line">		"border-right-width",</div><div class="line">		"border-right-style",</div><div class="line">		"border-right-color",</div><div class="line">		"border-bottom",</div><div class="line">		"border-bottom-width",</div><div class="line">		"border-bottom-style",</div><div class="line">		"border-bottom-color",</div><div class="line">		"border-left",</div><div class="line">		"border-left-width",</div><div class="line">		"border-left-style",</div><div class="line">		"border-left-color",</div><div class="line">		"-webkit-border-radius",</div><div class="line">		"-moz-border-radius",</div><div class="line">		"border-radius",</div><div class="line">		"-webkit-border-top-left-radius",</div><div class="line">		"-moz-border-radius-topleft",</div><div class="line">		"border-top-left-radius",</div><div class="line">		"-webkit-border-top-right-radius",</div><div class="line">		"-moz-border-radius-topright",</div><div class="line">		"border-top-right-radius",</div><div class="line">		"-webkit-border-bottom-right-radius",</div><div class="line">		"-moz-border-radius-bottomright",</div><div class="line">		"border-bottom-right-radius",</div><div class="line">		"-webkit-border-bottom-left-radius",</div><div class="line">		"-moz-border-radius-bottomleft",</div><div class="line">		"border-bottom-left-radius",</div><div class="line">		"-webkit-border-image",</div><div class="line">		"-moz-border-image",</div><div class="line">		"-o-border-image",</div><div class="line">		"border-image",</div><div class="line">		"-webkit-border-image-source",</div><div class="line">		"-moz-border-image-source",</div><div class="line">		"-o-border-image-source",</div><div class="line">		"border-image-source",</div><div class="line">		"-webkit-border-image-slice",</div><div class="line">		"-moz-border-image-slice",</div><div class="line">		"-o-border-image-slice",</div><div class="line">		"border-image-slice",</div><div class="line">		"-webkit-border-image-width",</div><div class="line">		"-moz-border-image-width",</div><div class="line">		"-o-border-image-width",</div><div class="line">		"border-image-width",</div><div class="line">		"-webkit-border-image-outset",</div><div class="line">		"-moz-border-image-outset",</div><div class="line">		"-o-border-image-outset",</div><div class="line">		"border-image-outset",</div><div class="line">		"-webkit-border-image-repeat",</div><div class="line">		"-moz-border-image-repeat",</div><div class="line">		"-o-border-image-repeat",</div><div class="line">		"border-image-repeat",</div><div class="line">		"padding",</div><div class="line">		"padding-top",</div><div class="line">		"padding-right",</div><div class="line">		"padding-bottom",</div><div class="line">		"padding-left",</div><div class="line">		"width",</div><div class="line">		"min-width",</div><div class="line">		"max-width",</div><div class="line">		"height",</div><div class="line">		"min-height",</div><div class="line">		"max-height"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"font",</div><div class="line">		"font-family",</div><div class="line">		"font-size",</div><div class="line">		"font-weight",</div><div class="line">		"font-style",</div><div class="line">		"font-variant",</div><div class="line">		"font-size-adjust",</div><div class="line">		"font-stretch",</div><div class="line">		"font-effect",</div><div class="line">		"font-emphasize",</div><div class="line">		"font-emphasize-position",</div><div class="line">		"font-emphasize-style",</div><div class="line">		"font-smooth",</div><div class="line">		"line-height",</div><div class="line">		"text-align",</div><div class="line">		"-webkit-text-align-last",</div><div class="line">		"-moz-text-align-last",</div><div class="line">		"-ms-text-align-last",</div><div class="line">		"text-align-last",</div><div class="line">		"vertical-align",</div><div class="line">		"white-space",</div><div class="line">		"text-decoration",</div><div class="line">		"text-emphasis",</div><div class="line">		"text-emphasis-color",</div><div class="line">		"text-emphasis-style",</div><div class="line">		"text-emphasis-position",</div><div class="line">		"text-indent",</div><div class="line">		"-ms-text-justify",</div><div class="line">		"text-justify",</div><div class="line">		"letter-spacing",</div><div class="line">		"word-spacing",</div><div class="line">		"-ms-writing-mode",</div><div class="line">		"text-outline",</div><div class="line">		"text-transform",</div><div class="line">		"text-wrap",</div><div class="line">		"-ms-text-overflow",</div><div class="line">		"text-overflow",</div><div class="line">		"text-overflow-ellipsis",</div><div class="line">		"text-overflow-mode",</div><div class="line">		"-ms-word-wrap",</div><div class="line">		"word-wrap",</div><div class="line">		"-ms-word-break",</div><div class="line">		"word-break"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"color",</div><div class="line">		"background",</div><div class="line">		"filter:progid:DXImageTransform.Microsoft.AlphaImageLoader",</div><div class="line">		"background-color",</div><div class="line">		"background-image",</div><div class="line">		"background-repeat",</div><div class="line">		"background-attachment",</div><div class="line">		"background-position",</div><div class="line">		"-ms-background-position-x",</div><div class="line">		"background-position-x",</div><div class="line">		"-ms-background-position-y",</div><div class="line">		"background-position-y",</div><div class="line">		"-webkit-background-clip",</div><div class="line">		"-moz-background-clip",</div><div class="line">		"background-clip",</div><div class="line">		"background-origin",</div><div class="line">		"-webkit-background-size",</div><div class="line">		"-moz-background-size",</div><div class="line">		"-o-background-size",</div><div class="line">		"background-size"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"outline",</div><div class="line">		"outline-width",</div><div class="line">		"outline-style",</div><div class="line">		"outline-color",</div><div class="line">		"outline-offset",</div><div class="line">		"opacity",</div><div class="line">		"filter:progid:DXImageTransform.Microsoft.Alpha(Opacity",</div><div class="line">		"-ms-filter:\\'progid:DXImageTransform.Microsoft.Alpha",</div><div class="line">		"-ms-interpolation-mode",</div><div class="line">		"-webkit-box-shadow",</div><div class="line">		"-moz-box-shadow",</div><div class="line">		"box-shadow",</div><div class="line">		"filter:progid:DXImageTransform.Microsoft.gradient",</div><div class="line">		"-ms-filter:\\'progid:DXImageTransform.Microsoft.gradient",</div><div class="line">		"text-shadow"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"-webkit-transition",</div><div class="line">		"-moz-transition",</div><div class="line">		"-ms-transition",</div><div class="line">		"-o-transition",</div><div class="line">		"transition",</div><div class="line">		"-webkit-transition-delay",</div><div class="line">		"-moz-transition-delay",</div><div class="line">		"-ms-transition-delay",</div><div class="line">		"-o-transition-delay",</div><div class="line">		"transition-delay",</div><div class="line">		"-webkit-transition-timing-function",</div><div class="line">		"-moz-transition-timing-function",</div><div class="line">		"-ms-transition-timing-function",</div><div class="line">		"-o-transition-timing-function",</div><div class="line">		"transition-timing-function",</div><div class="line">		"-webkit-transition-duration",</div><div class="line">		"-moz-transition-duration",</div><div class="line">		"-ms-transition-duration",</div><div class="line">		"-o-transition-duration",</div><div class="line">		"transition-duration",</div><div class="line">		"-webkit-transition-property",</div><div class="line">		"-moz-transition-property",</div><div class="line">		"-ms-transition-property",</div><div class="line">		"-o-transition-property",</div><div class="line">		"transition-property",</div><div class="line">		"-webkit-transform",</div><div class="line">		"-moz-transform",</div><div class="line">		"-ms-transform",</div><div class="line">		"-o-transform",</div><div class="line">		"transform",</div><div class="line">		"-webkit-transform-origin",</div><div class="line">		"-moz-transform-origin",</div><div class="line">		"-ms-transform-origin",</div><div class="line">		"-o-transform-origin",</div><div class="line">		"transform-origin",</div><div class="line">		"-webkit-animation",</div><div class="line">		"-moz-animation",</div><div class="line">		"-ms-animation",</div><div class="line">		"-o-animation",</div><div class="line">		"animation",</div><div class="line">		"-webkit-animation-name",</div><div class="line">		"-moz-animation-name",</div><div class="line">		"-ms-animation-name",</div><div class="line">		"-o-animation-name",</div><div class="line">		"animation-name",</div><div class="line">		"-webkit-animation-duration",</div><div class="line">		"-moz-animation-duration",</div><div class="line">		"-ms-animation-duration",</div><div class="line">		"-o-animation-duration",</div><div class="line">		"animation-duration",</div><div class="line">		"-webkit-animation-play-state",</div><div class="line">		"-moz-animation-play-state",</div><div class="line">		"-ms-animation-play-state",</div><div class="line">		"-o-animation-play-state",</div><div class="line">		"animation-play-state",</div><div class="line">		"-webkit-animation-timing-function",</div><div class="line">		"-moz-animation-timing-function",</div><div class="line">		"-ms-animation-timing-function",</div><div class="line">		"-o-animation-timing-function",</div><div class="line">		"animation-timing-function",</div><div class="line">		"-webkit-animation-delay",</div><div class="line">		"-moz-animation-delay",</div><div class="line">		"-ms-animation-delay",</div><div class="line">		"-o-animation-delay",</div><div class="line">		"animation-delay",</div><div class="line">		"-webkit-animation-iteration-count",</div><div class="line">		"-moz-animation-iteration-count",</div><div class="line">		"-ms-animation-iteration-count",</div><div class="line">		"-o-animation-iteration-count",</div><div class="line">		"animation-iteration-count",</div><div class="line">		"-webkit-animation-direction",</div><div class="line">		"-moz-animation-direction",</div><div class="line">		"-ms-animation-direction",</div><div class="line">		"-o-animation-direction",</div><div class="line">		"animation-direction"</div><div class="line">    ],</div><div class="line">    [</div><div class="line">		"content",</div><div class="line">		"quotes",</div><div class="line">		"counter-reset",</div><div class="line">		"counter-increment",</div><div class="line">		"resize",</div><div class="line">		"cursor",</div><div class="line">		"-webkit-user-select",</div><div class="line">		"-moz-user-select",</div><div class="line">		"-ms-user-select",</div><div class="line">		"user-select",</div><div class="line">		"nav-index",</div><div class="line">		"nav-up",</div><div class="line">		"nav-right",</div><div class="line">		"nav-down",</div><div class="line">		"nav-left",</div><div class="line">		"-moz-tab-size",</div><div class="line">		"-o-tab-size",</div><div class="line">		"tab-size",</div><div class="line">		"-webkit-hyphens",</div><div class="line">		"-moz-hyphens",</div><div class="line">		"hyphens",</div><div class="line">		"pointer-events"</div><div class="line">    ]</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><p>颜色16进制用小写字母；<br>颜色16进制尽量用简写。<br>代码示例：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* not good */</span></div><div class="line"><span class="selector-class">.element</span> &#123;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#ABCDEF</span>;</div><div class="line">	<span class="attribute">background-color</span>:<span class="number">#001122</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* good */</span></div><div class="line"><span class="selector-class">.element</span> &#123;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#abcdef</span>;</div><div class="line">	<span class="attribute">background-color</span>:<span class="number">#012</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="属性简写"><a href="#属性简写" class="headerlink" title="属性简写"></a>属性简写</h3><p>属性简写需要你非常清楚属性值的正确顺序，而且在大多数情况下并不需要设置属性简写中包含的所有值，所以建议尽量分开声明会更加清晰；<br><code>margin</code> 和 <code>padding</code> 相反，需要使用简写；<br>常见的属性简写包括：</p>
<pre><code>font、background、transition、animation
</code></pre><p>代码示例：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* not good */</span></div><div class="line"><span class="selector-class">.element</span> &#123;</div><div class="line">	<span class="attribute">transition</span>: opacity <span class="number">1s</span> linear <span class="number">2s</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* good */</span></div><div class="line"><span class="selector-class">.element</span> &#123;</div><div class="line">	<span class="attribute">transition-delay</span>: <span class="number">2s</span>;</div><div class="line">	<span class="attribute">transition-timing-function</span>: linear;</div><div class="line">	<span class="attribute">transition-duration</span>: <span class="number">1s</span>;</div><div class="line">	<span class="attribute">transition-property</span>: opacity;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h3><p>尽量将媒体查询的规则靠近与他们相关的规则，不要将他们一起放到一个独立的样式文件中，或者丢在文档的最底部，这样做只会让大家以后更容易忘记他们。<br>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">.element &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">.element-avatar&#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">@media(min-width:480px) &#123;</div><div class="line">	.element &#123;</div><div class="line">	...</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	.element-avatar &#123;</div><div class="line">	...</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="SCSS相关"><a href="#SCSS相关" class="headerlink" title="SCSS相关"></a>SCSS相关</h3><ul>
<li>提交的代码中不要有 <code>@debug</code>；</li>
<li>声明顺序：<ul>
<li><code>@extend</code></li>
<li>不包含 <code>@content</code> 的 <code>@include</code></li>
<li>包含 <code>@content</code> 的 <code>@include</code></li>
<li>自身属性</li>
<li>嵌套规则</li>
</ul>
</li>
<li><code>import</code> 引入的文件不需要开头的’_’和结尾的’<code>.scss</code>‘；</li>
<li>嵌套最多不能超过5层；</li>
<li><code>@extend</code>中使用<code>placeholder</code>选择器；</li>
<li>去掉不必要的父级引用符号’&amp;’。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/* not good */</div><div class="line">@import"_dialog.scss";</div><div class="line"></div><div class="line">/* good */</div><div class="line">@import"dialog";</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.fatal &#123;</div><div class="line">@extend .error;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.fatal &#123;</div><div class="line">@extend %error;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">&amp;&gt;.dialog &#123;</div><div class="line">...</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">&gt;.dialog &#123;</div><div class="line">...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h3><p>不允许有空的规则:</p>
<ul>
<li>元素选择器用小写字母；</li>
<li>去掉小数点前面的0；</li>
<li>去掉数字中不必要的小数点和末尾的0；</li>
<li>属性值’0’后面不要加单位；</li>
<li>同个属性不同前缀的写法需要在垂直方向保持对齐，具体参照下边的写法；</li>
<li>无前缀的标准属性应该写在有前缀的属性后面；</li>
<li>不要在同个规则里出现重复的属性，如果重复的属性是连续的则没关系；</li>
<li>不要在一个文件里出现两个相同的规则；</li>
<li>用 <code>border: 0</code>; 代替 <code>border: none</code>;；</li>
<li>选择器不要超过4层（在<code>scss</code>中如果超过4层应该考虑用嵌套的方式来写）；</li>
<li>发布的代码中不要有 <code>@import</code>；</li>
<li>尽量少用’*’选择器。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">LI &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">li &#123;</div><div class="line">...</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">	color:rgba(0,0,0,0.5);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	color:rgba(0,0,0,.5);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">	width:50.0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	width:50px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">	width:0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	width:0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">	border-radius:3px;</div><div class="line">	-webkit-border-radius:3px;</div><div class="line">	-moz-border-radius:3px;</div><div class="line">	</div><div class="line">	background: linear-gradient(to bottom,#fff0,#eee100%);</div><div class="line">	background:-webkit-linear-gradient(top,#fff0,#eee100%);</div><div class="line">	background:-moz-linear-gradient(top,#fff0,#eee100%);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	-webkit-border-radius:3px;</div><div class="line">	-moz-border-radius:3px;</div><div class="line">	border-radius:3px;</div><div class="line">	background:-webkit-linear-gradient(top,#fff0,#eee100%);</div><div class="line">	background:-moz-linear-gradient(top,#fff0,#eee100%);</div><div class="line">	background:linear-gradient(to bottom,#fff0,#eee100%);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* not good */</div><div class="line">.element &#123;</div><div class="line">	color:rgb(0,0,0);</div><div class="line">	width:50px;</div><div class="line">	color:rgba(0,0,0,.5);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* good */</div><div class="line">.element &#123;</div><div class="line">	color:rgb(0,0,0);</div><div class="line">	color:rgba(0,0,0,.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="缩进-1"><a href="#缩进-1" class="headerlink" title="缩进"></a>缩进</h3><p>使用<code>soft tab</code>（4个空格）。<br>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> x =<span class="number">1</span>,</div><div class="line">    y =<span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (x &lt; y) &#123;</div><div class="line">    x +=<span class="number">10</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    x +=<span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="单行长度"><a href="#单行长度" class="headerlink" title="单行长度"></a>单行长度</h3><p>不要超过80，但如果编辑器开启<code>word wrap</code>可以不考虑单行长度。</p>
<h3 id="单个函数代码行数"><a href="#单个函数代码行数" class="headerlink" title="单个函数代码行数"></a>单个函数代码行数</h3><p>单个函数尽量不要超过40行代码，迫不得已的情况下也不要超过100行。代码行数越多，产生BUG的概率越大，所以尽量减少单个函数的代码行数是很有必要的。减少单个函数的代码行数，对代码维护也是非常有益的。</p>
<h3 id="分号-1"><a href="#分号-1" class="headerlink" title="分号"></a>分号</h3><p>以下几种情况后需加分号：</p>
<ul>
<li>变量声明</li>
<li>表达式</li>
<li><code>return</code></li>
<li><code>throw</code></li>
<li><code>break</code></li>
<li><code>continue</code></li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* var declaration */</span></div><div class="line"><span class="keyword">var</span> x =<span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="comment">/* expression statement */</span></div><div class="line">x++;</div><div class="line"></div><div class="line"><span class="comment">/* do-while */</span></div><div class="line"><span class="keyword">do</span> &#123;</div><div class="line">	x++;</div><div class="line">&#125; <span class="keyword">while</span> (x &lt;<span class="number">10</span>);</div></pre></td></tr></table></figure>
<h3 id="空格-1"><a href="#空格-1" class="headerlink" title="空格"></a>空格</h3><p>以下几种情况不需要空格：</p>
<ul>
<li>对象的属性名后</li>
<li>前缀一元运算符后</li>
<li>后缀一元运算符前</li>
<li>函数调用括号前</li>
<li>无论是函数声明还是函数表达式，’(‘前不要空格</li>
<li>数组的’[‘后和’]’前</li>
<li>对象的’{‘后和’}’前</li>
<li>运算符’(‘后和’)’前</li>
</ul>
<p>以下几种情况需要空格：</p>
<ul>
<li>二元运算符前后</li>
<li>三元运算符’?:’前后</li>
<li>代码块’{‘前</li>
<li>下列关键字前：<code>else</code>, <code>while</code>, <code>catch</code>, <code>finally</code></li>
<li>下列关键字后：<code>if</code>, <code>else</code>, <code>for</code>, <code>while</code>, <code>do</code>, <code>switch</code>, <code>case</code>, <code>try</code>, <code>catch</code>, <code>finally</code>, <code>with</code>, <code>return</code>, <code>typeof</code></li>
<li>单行注释’//‘后（若单行注释和代码同行，则’//‘前也需要），多行注释’*’后</li>
<li>对象的属性值前</li>
<li><code>for</code>循环，分号后留有一个空格，前置条件如果有多个，逗号后留一个空格</li>
<li>无论是函数声明还是函数表达式，’{‘前一定要有空格</li>
<li>函数的参数之间</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a = &#123;</div><div class="line">	<span class="attr">b</span> :<span class="number">1</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a = &#123;</div><div class="line">	<span class="attr">b</span>: <span class="number">1</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line">++ x;</div><div class="line">Y ++;</div><div class="line">z = x?<span class="number">1</span>:<span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line">++x;</div><div class="line">y++;</div><div class="line">z = x ? <span class="number">1</span> : <span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a = [ <span class="number">1</span>, <span class="number">2</span> ];</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>];</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a = ( <span class="number">1</span>+<span class="number">2</span> )*<span class="number">3</span>;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a = (<span class="number">1</span> + <span class="number">2</span>) *<span class="number">3</span>;</div><div class="line"></div><div class="line"><span class="comment">// no space before '(', one space before '&#123;', one space between function parameters</span></div><div class="line"><span class="keyword">var</span> doSomething = <span class="function"><span class="keyword">function</span>(<span class="params">a, b, c</span>) </span>&#123;</div><div class="line">	<span class="comment">// do something</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// no space before '('</span></div><div class="line">doSomething(item);</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</div><div class="line">	x++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;<span class="number">6</span>; i++) &#123;</div><div class="line">	x++;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="空行-1"><a href="#空行-1" class="headerlink" title="空行"></a>空行</h3><p>以下几种情况需要空行：</p>
<ul>
<li>变量声明后（当变量声明在代码块的最后一行时，则无需空行）</li>
<li>注释前（当注释在代码块的第一行时，则无需空行）</li>
<li>代码块后（在函数调用、数组、对象中则无需空行）</li>
<li>文件最后保留一个空行</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// need blank line after variable declaration</span></div><div class="line"><span class="keyword">var</span> x =<span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="comment">// not need blank line when variable declaration is last expression in the current block</span></div><div class="line"><span class="keyword">if</span> (x &gt;=<span class="number">1</span>) &#123;</div><div class="line">	<span class="keyword">var</span> y = x +<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> a =<span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">// need blank line before line comment</span></div><div class="line">a++;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="comment">// not need blank line when comment is first line of block</span></div><div class="line">	<span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// need blank line after blocks</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i =<span class="number">0</span>; i &lt;<span class="number">2</span>; i++) &#123;</div><div class="line">	<span class="keyword">if</span> (<span class="literal">true</span>) &#123;</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">	<span class="keyword">continue</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">	<span class="attr">foo</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		return1;</div><div class="line">	&#125;,</div><div class="line">	<span class="attr">bar</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		return2;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// not need blank line when in argument list, array, object</span></div><div class="line">func(</div><div class="line">	<span class="number">2</span>,</div><div class="line">	<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		a++;</div><div class="line">    &#125;,</div><div class="line">	<span class="number">3</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">var</span> foo = [</div><div class="line">	<span class="number">2</span>,</div><div class="line">	<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		a++;</div><div class="line">	    &#125;,</div><div class="line">	<span class="number">3</span></div><div class="line">];</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> foo = &#123;</div><div class="line">	<span class="attr">a</span>:<span class="number">2</span>,</div><div class="line">	<span class="attr">b</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		a++;</div><div class="line">    &#125;,</div><div class="line">	<span class="attr">c</span>:<span class="number">3</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="换行-1"><a href="#换行-1" class="headerlink" title="换行"></a>换行</h3><p>换行的地方，行末必须有’,’或者运算符；<br>以下几种情况不需要换行：</p>
<ul>
<li>下列关键字后：<code>else</code>,<code>catch</code>, <code>finally</code></li>
<li>代码块’{‘前</li>
</ul>
<p>以下几种情况需要换行：</p>
<ul>
<li>代码块’{‘后和’}’前</li>
<li>变量赋值后</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a = &#123;</div><div class="line">	<span class="attr">b</span>:<span class="number">1</span></div><div class="line">    , <span class="attr">c</span>:<span class="number">2</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line">x = y</div><div class="line">?<span class="number">1</span>:<span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a = &#123;</div><div class="line">	<span class="attr">b</span>: <span class="number">1</span>,</div><div class="line">	<span class="attr">c</span>: <span class="number">2</span> </div><div class="line">&#125;;</div><div class="line"></div><div class="line">x = y ? <span class="number">1</span> : <span class="number">2</span>;</div><div class="line">x =y ?</div><div class="line"><span class="number">1</span>:<span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">// no need line break with 'else', 'catch', 'finally'</span></div><div class="line"><span class="keyword">if</span> (condition) &#123;</div><div class="line">    ...</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    ...</div><div class="line">&#125; <span class="keyword">catch</span> (e) &#123;</div><div class="line">    ...</div><div class="line">&#125; <span class="keyword">finally</span> &#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a, foo =<span class="number">7</span>, b,</div><div class="line">c, bar =<span class="number">8</span>;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a,</div><div class="line">foo=<span class="number">7</span>,</div><div class="line">b, c, bar =<span class="number">8</span>;</div></pre></td></tr></table></figure>
<h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><ul>
<li>双斜线后，必须跟一个空格；</li>
<li>缩进与下一行代码保持一致；</li>
<li>可位于一个代码行的末尾，与代码间隔一个空格。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">if</span> (condition) &#123;</div><div class="line">	<span class="comment">// if you made it here, then all security checks passed</span></div><div class="line">	allowed();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> zhangsan = <span class="string">'zhangsan'</span>; <span class="comment">// one space after code</span></div></pre></td></tr></table></figure>
<h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>最少三行, ‘*’后跟一个空格，具体参照右边的写法；<br>建议在以下情况下使用：</p>
<ul>
<li>难于理解的代码段</li>
<li>可能存在错误的代码段</li>
<li>浏览器特殊的HACK代码</li>
<li>业务逻辑强相关的代码</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * one space after '*'</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> x =<span class="number">1</span>;</div></pre></td></tr></table></figure>
<h3 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h3><p>各类标签<code>@param</code>, <code>@method</code>等请参考<a href="[http://yuri4ever.github.io/jsdoc/]">http://yuri4ever.github.io/jsdoc/</a>；</p>
<p>建议在以下情况下使用：</p>
<ul>
<li>所有常量</li>
<li>所有函数</li>
<li>所有类</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @func</div><div class="line"> * @desc一个带参数的函数</div><div class="line"> * @param &#123;string&#125; a - 参数a</div><div class="line"> * @param &#123;number&#125; b=1 - 参数b默认值为1</div><div class="line"> * @param &#123;string&#125; c=1 - 参数c有两种支持的取值&lt;/br&gt;1—表示x&lt;/br&gt;2—表示xx</div><div class="line"> * @param &#123;object&#125; d - 参数d为一个对象</div><div class="line"> * @param &#123;string&#125; d.e - 参数d的e属性</div><div class="line"> * @param &#123;string&#125; d.f - 参数d的f属性</div><div class="line"> * @param &#123;object[]&#125; g - 参数g为一个对象数组</div><div class="line"> * @param &#123;string&#125; g.h - 参数g数组中一项的h属性</div><div class="line"> * @param &#123;string&#125; g.i - 参数g数组中一项的i属性</div><div class="line"> * @param &#123;string&#125; [j] - 参数j是一个可选参数</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a, b, c, d, g, j</span>) </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="引号-1"><a href="#引号-1" class="headerlink" title="引号"></a>引号</h3><p>最外层统一使用单引号。<br>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> x =<span class="string">"test"</span>;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> y =<span class="string">'foo'</span>,</div><div class="line">    z =<span class="string">'&lt;div id="test"&gt;&lt;/div&gt;'</span>;</div></pre></td></tr></table></figure>
<h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><ul>
<li>标准变量采用驼峰式命名（除了对象的属性外，主要是考虑到<code>cgi</code>返回的数据）</li>
<li>‘<code>ID</code>‘在变量名中全大写</li>
<li>‘<code>URL</code>‘在变量名中全大写</li>
<li>‘<code>Android</code>‘在变量名中大写第一个字母</li>
<li>‘<code>iOS</code>‘在变量名中小写第一个，大写后两个字母</li>
<li>常量全大写，用下划线连接</li>
<li>构造函数，大写第一个字母</li>
<li><code>jquery</code>对象必须以’$’开头命名</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> thisIsMyName;</div><div class="line"></div><div class="line"><span class="keyword">var</span> goodID;</div><div class="line"></div><div class="line"><span class="keyword">var</span> reportURL;</div><div class="line"></div><div class="line"><span class="keyword">var</span> AndroidVersion;</div><div class="line"></div><div class="line"><span class="keyword">var</span> iOSVersion;</div><div class="line"></div><div class="line"><span class="keyword">var</span> MAX_COUNT =<span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">	<span class="keyword">this</span>.name = name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> body = $(<span class="string">'body'</span>);</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> $body = $(<span class="string">'body'</span>);</div></pre></td></tr></table></figure>
<h3 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h3><ul>
<li>一个函数作用域中所有的变量声明尽量提到函数首部。</li>
<li>采用单<code>var</code>声明多个变量，并且5个变量为一组，超过5个另起一组。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomethingWithItems</span>(<span class="params">items</span>) </span>&#123;</div><div class="line">	<span class="comment">// use one var</span></div><div class="line">	<span class="keyword">var</span> value =<span class="number">10</span>,</div><div class="line">		result= value +<span class="number">10</span>,</div><div class="line">		i,</div><div class="line">		len,</div><div class="line">		count;</div><div class="line"></div><div class="line">	<span class="comment">// new</span></div><div class="line">	<span class="keyword">var</span> total;</div><div class="line">	</div><div class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>, len = items.length; i &lt; len; i++) &#123;</div><div class="line">		result += <span class="number">10</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ul>
<li>无论是函数声明还是函数表达式，’(‘前不要空格，但’{‘前一定要有空格；</li>
<li>函数调用括号前不需要空格；</li>
<li>立即执行函数外必须包一层括号；</li>
<li>不要给<code>inline</code> <code>function</code>命名；</li>
<li>参数之间用’, ‘分隔，注意逗号后有一个空格。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// no space before '(', but one space before'&#123;'</span></div><div class="line"><span class="keyword">var</span> doSomething = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">	<span class="comment">// do something</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">	<span class="comment">// do something</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line">doSomething (item);</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line">doSomething(item);</div><div class="line"></div><div class="line"><span class="comment">// requires parentheses around immediately invoked function expressions</span></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	return1;</div><div class="line">&#125;)();</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line">[<span class="number">1</span>, <span class="number">2</span>].forEach(<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line">[<span class="number">1</span>, <span class="number">2</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;];</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;];</div><div class="line"></div><div class="line"><span class="comment">// use ', ' between function parameters</span></div><div class="line"><span class="keyword">var</span> doSomething = <span class="function"><span class="keyword">function</span>(<span class="params">a, b, c</span>) </span>&#123;</div><div class="line">	<span class="comment">// do something</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="数组、对象"><a href="#数组、对象" class="headerlink" title="数组、对象"></a>数组、对象</h3><ul>
<li>对象属性名不需要加引号；</li>
<li>对象以缩进的形式书写，不要写在一行；</li>
<li>数组、对象最后不要有逗号。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a = &#123;</div><div class="line">	<span class="string">'b'</span>:<span class="number">1</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> a = &#123;<span class="attr">b</span>:<span class="number">1</span>&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> a = &#123;</div><div class="line">	<span class="attr">b</span>:<span class="number">1</span>,</div><div class="line">	<span class="attr">c</span>:<span class="number">2</span>,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a = &#123;</div><div class="line">	<span class="attr">b</span>:<span class="number">1</span>,</div><div class="line">	<span class="attr">c</span>:<span class="number">2</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h3><p>下列关键字后必须有大括号（即使代码块的内容只有一行）：</p>
<pre><code>if, else, for, while, do, switch, try, catch, finally, with。
</code></pre><p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">if</span> (condition)</div><div class="line">	doSomething();</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">if</span> (condition) &#123;</div><div class="line">	doSomething();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><p>适用场景：</p>
<ul>
<li>初始化一个将来可能被赋值为对象的变量</li>
<li>与已经初始化的变量做比较</li>
<li>作为一个参数为对象的函数的调用传参</li>
<li>作为一个返回对象的函数的返回值</li>
</ul>
<p>不适用场景：</p>
<ul>
<li>不要用<code>null</code>来判断函数调用时有无传参</li>
<li>不要与未初始化的变量做比较</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (b === <span class="literal">null</span>) &#123;</div><div class="line">		<span class="comment">// not mean b is not supply</span></div><div class="line">       	...</div><div class="line">   	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> a;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (a === <span class="literal">null</span>) &#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> a = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (a === <span class="literal">null</span>) &#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h3><ul>
<li>永远不要直接使用<code>undefined</code>进行变量判断；</li>
<li>使用<code>typeof</code>和字符串’<code>undefined</code>‘对变量进行判断。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">if</span> (person === <span class="literal">undefined</span>) &#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> person === <span class="string">'undefined'</span>) &#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="jshint"><a href="#jshint" class="headerlink" title="jshint"></a>jshint</h3><ul>
<li>用’<code>===</code>‘, ‘<code>!==</code>‘代替’<code>==</code>‘, ‘<code>!=</code>‘；</li>
<li><code>for-in</code>里一定要有<code>hasOwnProperty</code>的判断；</li>
<li>不要在内置对象的原型上添加方法，如<code>Array</code>, <code>Date</code>；</li>
<li>不要在内层作用域的代码里声明了变量，之后却访问到了外层作用域的同名变量；</li>
<li>变量不要先使用后声明；</li>
<li>不要在一句代码中单单使用构造函数，记得将其赋值给某个变量；</li>
<li>不要在同个作用域下声明同名变量；</li>
<li>不要在一些不需要的地方加括号，例：<code>delete(a.b)</code>；</li>
<li>不要使用未声明的变量（全局变量需要加到<code>.jshintrc</code>文件的<code>globals</code>属性里面）；</li>
<li>不要声明了变量却不使用；</li>
<li>不要在应该做比较的地方做赋值；</li>
<li><code>debugger</code>不要出现在提交的代码里；</li>
<li>数组中不要存在空元素；</li>
<li>不要在循环内部声明函数；</li>
<li>不要像这样使用构造函数，例：<code>new function () { ... }, new Object</code>；</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">if</span> (a == <span class="number">1</span>) &#123;</div><div class="line">	a++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">if</span> (a === <span class="number">1</span>) &#123;</div><div class="line">	a++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">for</span> (key <span class="keyword">in</span> obj) &#123;</div><div class="line">	<span class="keyword">if</span> (obj.hasOwnProperty(key)) &#123;</div><div class="line">		<span class="comment">// be sure that obj[key] belongs to the object and was not inherited</span></div><div class="line">		<span class="built_in">console</span>.log(obj[key]);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="built_in">Array</span>.prototype.count=<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</div><div class="line">	Return <span class="number">4</span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (<span class="literal">true</span>) &#123;</div><div class="line">		<span class="keyword">var</span> x = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    x += <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line"></div><div class="line">	<span class="keyword">var</span> x =<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">new</span> Person();</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> Person();</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">delete</span>(obj.attr);</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">delete</span> obj.attr;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">if</span> (a = <span class="number">10</span>) &#123;</div><div class="line">	a++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, , , <span class="number">2</span>, <span class="number">3</span>];</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line">Var nums = [];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</div><div class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</div><div class="line">		nums[i] =<span class="function"><span class="keyword">function</span>(<span class="params">j</span>) </span>&#123;</div><div class="line">			<span class="keyword">return</span> i + j;</div><div class="line">		&#125;;</div><div class="line">	&#125;(i));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> singleton = <span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> privateVar;</div><div class="line">	</div><div class="line">	<span class="keyword">this</span>.publicMethod = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		privateVar = <span class="number">1</span>;</div><div class="line">	&#125;;</div><div class="line">	</div><div class="line">	<span class="keyword">this</span>.publicMethod2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		privateVar = <span class="number">2</span>;</div><div class="line">	&#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="杂项-1"><a href="#杂项-1" class="headerlink" title="杂项"></a>杂项</h3><ul>
<li>不要混用<code>tab</code>和<code>space</code>；</li>
<li>不要在一处使用多个<code>tab</code>或<code>space</code>；</li>
<li>换行符统一用’<code>LF</code>‘；</li>
<li>对上下文<code>this</code>的引用只能使用’<code>_this</code>‘, ‘<code>that</code>‘, ‘<code>self</code>‘其中一个来命名；</li>
<li>行尾不要有空白字符；</li>
<li><code>switch</code>的<code>falling through</code>和<code>no default</code>的情况一定要有注释特别说明；</li>
<li>不允许有空的代码块。</li>
</ul>
<p>代码示例：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// not good</span></div><div class="line"><span class="keyword">var</span> a   =<span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="comment">// not good</span></div><div class="line">	<span class="keyword">var</span> me = <span class="keyword">this</span>;</div><div class="line">	</div><div class="line">	<span class="comment">// good</span></div><div class="line">	<span class="keyword">var</span> _this = <span class="keyword">this</span>;</div><div class="line">	</div><div class="line">	<span class="comment">// good</span></div><div class="line">	<span class="keyword">var</span> that = <span class="keyword">this</span>;</div><div class="line">	</div><div class="line">	<span class="comment">// good</span></div><div class="line">	<span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">switch</span> (condition) &#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">	<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">	        ...</div><div class="line">	break;</div><div class="line">	<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">	        ...</div><div class="line">	<span class="comment">// why fall through</span></div><div class="line">	<span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">	        ...</div><div class="line">	break;</div><div class="line">	<span class="comment">// why no default</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// not good with empty block</span></div><div class="line"><span class="keyword">if</span> (condition) &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Angularjs&Jquery项目优化实践]]></title>
      <url>https://sefon-fe.github.io/2016/09/30/run-faster/</url>
      <content type="html"><![CDATA[<h2 id="优化方向"><a href="#优化方向" class="headerlink" title="优化方向"></a>优化方向</h2><ul>
<li>设计器操作性能优化</li>
<li>设计器加载启动速度优化</li>
</ul>
<h2 id="操作性能优化"><a href="#操作性能优化" class="headerlink" title="操作性能优化"></a>操作性能优化</h2><h3 id="性能缺陷分析"><a href="#性能缺陷分析" class="headerlink" title="性能缺陷分析"></a>性能缺陷分析</h3><ul>
<li>设计器中未添加项目时页面中的<code>html</code>标签数量达到： 6258 个</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'*'</span>).length</div><div class="line"><span class="comment">//得到 6258 多个DOM节点，还是比较多了。可想添加了项目之后这个还会增加更多，预计在1万以上</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<ul>
<li>由于<code>html</code>节点很多，在查找操作某个DOM节点时是非常消耗性能的，其中项目中（designerDirective.js，等组件。。。）存在较多未缓存的节点操作；</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">//element.parent(),多次使用，可以缓存起来</span></div><div class="line"><span class="comment">//同时element.parent().parent()，也是多次使用，多次查找</span></div><div class="line">state = element.parent().attr(<span class="string">"state"</span>);</div><div class="line">   <span class="keyword">if</span> (state == <span class="string">'close'</span>) &#123;</div><div class="line">       element.parent().parent().addClass(<span class="string">"pageCtrInitialize"</span>).removeClass(<span class="string">"pageCtr"</span>);</div><div class="line">       element.parent().parent().siblings().addClass(<span class="string">"moduleCtrInitialize"</span>).removeClass(<span class="string">"moduleCtr"</span>);</div><div class="line">       element.parent().attr(<span class="string">"state"</span>, <span class="string">"open"</span>);</div><div class="line">       element.children(<span class="string">"i"</span>).addClass(<span class="string">"defaultIcon-down"</span>).removeClass(<span class="string">"defaultIcon-up"</span>);</div><div class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == <span class="string">'open'</span>) &#123;</div><div class="line">       element.parent().parent().addClass(<span class="string">"pageCtr"</span>).removeClass(<span class="string">"pageCtrInitialize"</span>);</div><div class="line">       element.parent().parent().siblings().addClass(<span class="string">"moduleCtr"</span>).removeClass(<span class="string">"moduleCtrInitialize"</span>);</div><div class="line">       element.parent().attr(<span class="string">"state"</span>, <span class="string">"close"</span>);</div><div class="line">       element.children(<span class="string">"i"</span>).addClass(<span class="string">"defaultIcon-up"</span>).removeClass(<span class="string">"defaultIcon-down"</span>);</div><div class="line">   &#125;</div><div class="line"></div><div class="line"><span class="comment">//优化</span></div><div class="line"><span class="keyword">var</span> $parent = element.parent(),</div><div class="line">	$pParent = $parent.parent();</div><div class="line"></div><div class="line"><span class="comment">//do something...</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>AngularJs</code>的脏值检测机智在<strong>某些时候</strong>会严重影响性能；具体看下面参考资料，必读篇。</p>
<ul>
<li>DOM事件，譬如用户输入文本，点击按钮等。(ng-click)</li>
<li>XHR响应事件 ($http)</li>
<li>浏览器Location变更事件 ($location)</li>
<li>Timer事件($timeout, $interval)</li>
<li><p>执行$digest()或$apply()</p>
<p>都会触发<code>$digest cycle</code></p>
</li>
</ul>
</li>
<li>页面鼠标操作触发事件是很耗性能的；</li>
</ul>
<h3 id="改进方案"><a href="#改进方案" class="headerlink" title="改进方案"></a>改进方案</h3><blockquote>
<p>JS&amp;Jquery操作<code>DOM</code>方向</p>
</blockquote>
<ul>
<li>尽量减少<code>html</code>标签的嵌套；</li>
<li>一定要缓存<strong>多次</strong>使用的<code>DOM</code>节点，操作节点代价很高的；</li>
<li>减少JS循环的操作；</li>
<li>使用事件代理，在多数据的列表中 <code>$(&#39;#ul&#39;).on(&#39;click&#39;, &#39;li&#39;, func)</code>;</li>
<li>对某些<code>DOM</code>样式的操作，可以考虑<code>cssText</code>或者生成临时<code>class</code>样式追加到页面中；</li>
<li><p>Jquery编码方式性能优化 【读】 </p>
<ul>
<li><a href="http://www.open-open.com/lib/view/open1401757126775.html" target="_blank" rel="external">http://www.open-open.com/lib/view/open1401757126775.html</a></li>
<li><a href="http://blog.jobbole.com/10279/" target="_blank" rel="external">http://blog.jobbole.com/10279/</a></li>
</ul>
</li>
<li><p>雅虎性能优化方案【读】</p>
<ul>
<li><a href="http://blog.csdn.net/u010648555/article/details/50721751" target="_blank" rel="external">http://blog.csdn.net/u010648555/article/details/50721751</a></li>
<li><a href="http://www.tuicool.com/articles/J3uyaa" target="_blank" rel="external">http://www.tuicool.com/articles/J3uyaa</a></li>
</ul>
</li>
</ul>
<blockquote>
<p>AngularJs优化方向</p>
</blockquote>
<ul>
<li><p>NG的硬伤</p>
<p>  说到硬伤就要先说下它的简单的数据绑定原理,ng里每个页面上定义的<code>model</code>其实都会在当前作用域下添加一个监听器,内部容器就是<code>$$wachers</code>数组,只要页面任何一个<code>model</code>发生变化了,就会触发作用域内部<code>$digest</code>方法,它会依次查找当前作用域树里的所有<code>model</code>,是保证页面上的模型能得到数据同步,所以这个是非常消耗程序时间的,官方的说法就是当页面上出现<code>2000</code>个监听器时,页面性能就会明显下降.所以要提高ng的性能,就要从这方面入手了.</p>
</li>
</ul>
<ul>
<li>避免深度数据的<code>$watch</code>,因为会触发<code>$digest</code>，循环脏值检测；详情见【参考资料第一个】</li>
<li>指令中引用第三方服务，使用 <code>$on.$destroy</code>,来销毁当前不用的服务。</li>
<li><p>使用Angular一次绑定方案</p>
<p>  ng的1.3.0+的版本已经内置提供了一个语法来支持模型只绑定一次的情况,看下面的例子:</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">&lt;!--双向--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--单项--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;::name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>$scope.$digest vs $scope.$apply</p>
<p>  相信很多人对<code>$apply</code>方法不陌生,它一般用在,当不在ng的环境里执行代码的时候,为了保证页面的数据同步,在代码执行完成之后调用$apply方法会触发内部<code>$digest</code>来检查作用域里所有的模型。想要保证页面上所有模型数据的同步,还是得调用<code>$rootScope</code>的,所以在写代码之前最好想想哪些数据是要同步变化的.</p>
</li>
<li><p>尽可能少调用 <code>ng-repeat</code></p>
<p>  <code>ng-repeat</code>默认会创建很多监听器,所以在数据量很大的时候,这个非常消耗页面性能,我觉的只有在当需要经常更新数据列表的时候才需要用<code>ng-repeat</code>,要不然放那么多的监听器在那里也是浪费,这时候可以用ng自带的<code>$interpolate</code>服务来解析一个代码片段,类似于一个静态模板引擎,它的内部主要依赖ng核心解析服务<code>$parse</code>,然后把这些填充数据之后的代码片段直接赋给一个一次性的模型性就可以.</p>
</li>
<li><p>尽量在指令里写原生语法</p>
<p>  虽然ng提供了很多的指令比如<code>ng-show,ng-hide</code>,其实它们作用就是根据模型的<code>true,false</code>来显示或隐藏一个代码片段,虽然能够很快速的实现业务要求,但是这些指令还是默认会添加监听器,假如这些代码片段存在于一个大的指令里面时,更好的方法是在指令<code>link</code>里编写<code>.show(), .hide()</code>这些类似的<code>jq</code>方法来控制比较好,这样可以节省监听器的数量,类似的还有自带的事件指令,这些其实都可以在外围指令里通过使用<code>addEventListener</code>来绑定事件,反正在写代码之前,最好想想怎么样来使监听器的数量最少,这样才能全面的提高页面性能.</p>
</li>
<li><p>页面内尽量少用<code>filters</code></p>
<p>  当在页面内的模型后面增加<code>filter</code>时,这个会造成当前模型在<code>$digest</code>里运行两次,造成不必要的性能浪费.第一次在<code>$$watchers</code>检测任务改变时;第二次发生在模型值修改时,所以尽量少用内联时的过滤器语法,像下面这样的非常影响页面性能<br>  推荐使用<code>$filter</code>服务来调用某个过滤器函数在后台,这样能明显的提高页面性能,代码如下</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$filter(<span class="string">'filter'</span>)(array, expression, comparator);</div></pre></td></tr></table></figure>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>系统框架是Angular，这一块由于经验欠缺，说的不是很细，只能贴一些参考。更多的是在 JS，Jquery的操作上面，基础的优化还是很有必要的。</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>AngularJS性能优化心得【建议必看】 <a href="https://github.com/atian25/blog/issues/5" target="_blank" rel="external">https://github.com/atian25/blog/issues/5</a></li>
<li>优化AngularJS：1200毫秒到35毫秒的蜕变 <a href="http://blog.jobbole.com/51180/" target="_blank" rel="external">http://blog.jobbole.com/51180/</a></li>
<li>AngularJS中的数据绑定 <a href="https://github.com/rchee/translation/blob/master/angularJS/databinding-in-angularjs.md" target="_blank" rel="external">https://github.com/rchee/translation/blob/master/angularJS/databinding-in-angularjs.md</a></li>
<li>How I’ve Improved My Angular Apps by Banning ng-controller <a href="http://teropa.info/blog/2014/10/24/how-ive-improved-my-angular-apps-by-banning-ng-controller.html" target="_blank" rel="external">http://teropa.info/blog/2014/10/24/how-ive-improved-my-angular-apps-by-banning-ng-controller.html</a></li>
<li>angular-lazyload <a href="https://github.com/atian25/angular-lazyload" target="_blank" rel="external">https://github.com/atian25/angular-lazyload</a></li>
</ul>
<h2 id="启动性能优化"><a href="#启动性能优化" class="headerlink" title="启动性能优化"></a>启动性能优化</h2><h3 id="启动缺陷分析"><a href="#启动缺陷分析" class="headerlink" title="启动缺陷分析"></a>启动缺陷分析</h3><ul>
<li>页面加载求情的资源总大小： ；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">http://10.0.5.40/analystui/project.html#/project?lan=zh</div><div class="line">总请求数 450 个,资源总大小 17.6MB ,transferred 4.88s DOMContentLoaded 1.46s</div></pre></td></tr></table></figure>
<p>由于是局域网，所以加载完成到启动项目还不是很慢，但是一旦到了公网中，就要考虑用户的带宽问题了。同时浏览器对资源请求并发数，也是有些限制的，具体参考 <a href="http://www.zhihu.com/question/20474326" target="_blank" rel="external">http://www.zhihu.com/question/20474326</a></p>
<ul>
<li>页面请求的文件数量： 根据带宽计算时间 ；</li>
<li>图片，样式，脚本，HTML都没有使用压缩，里面包含了很多的开发注释和一些二次修改代码，导致体积很大；</li>
<li>nginx优化等等；</li>
<li>考虑使用<code>CDN</code>，或者全站<code>CDN</code>方案；</li>
</ul>
<h3 id="改进方案-1"><a href="#改进方案-1" class="headerlink" title="改进方案"></a>改进方案</h3><ul>
<li>使用<code>gulp</code>或者其他构建工具压缩 <code>CSS，JS，HTML，IMG</code>，合并等；以带到减少文件大小，请求数量等等；</li>
<li>可能的话，可以尝试使用全站<code>CDN</code>加速；</li>
<li>或者使用懒加载方案<code>lazyload</code>，加载后续操作的脚本和样式等；</li>
</ul>]]></content>
    </entry>
    
  
  
</search>
